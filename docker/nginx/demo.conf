# Nginx configuration for Esper tech demo
upstream urza {
    server urza:8000;
}

upstream tamiyo {
    server tamiyo:8001;
}

upstream tolaria {
    server tolaria:8080;
}

upstream grafana {
    server grafana:3000;
}

# Rate limiting
limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
limit_req_zone $binary_remote_addr zone=health:10m rate=100r/m;

server {
    listen 80;
    listen [::]:80;
    server_name _;
    
    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;

    # Main demo page
    location / {
        root /usr/share/nginx/html;
        index index.html;
        try_files $uri $uri/ =404;
    }

    # API Gateway
    location /api/urza/ {
        limit_req zone=api burst=20 nodelay;
        
        proxy_pass http://urza/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Timeouts for long-running operations
        proxy_connect_timeout 60s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;
    }

    location /api/tamiyo/ {
        limit_req zone=api burst=20 nodelay;
        
        proxy_pass http://tamiyo/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # WebSocket support for real-time updates
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        
        proxy_connect_timeout 60s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;
    }

    location /api/tolaria/ {
        limit_req zone=api burst=10 nodelay;
        
        proxy_pass http://tolaria/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Large body size for model uploads
        client_max_body_size 100M;
        
        proxy_connect_timeout 60s;
        proxy_send_timeout 600s;
        proxy_read_timeout 600s;
    }

    # Grafana dashboards
    location /grafana/ {
        proxy_pass http://grafana/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Remove /grafana prefix
        rewrite ^/grafana/(.*)$ /$1 break;
    }

    # Health checks (higher rate limit)
    location /health {
        limit_req zone=health burst=5 nodelay;
        
        access_log off;
        add_header Content-Type text/plain;
        return 200 'OK';
    }

    location /api/urza/health {
        limit_req zone=health burst=5 nodelay;
        
        access_log off;
        proxy_pass http://urza/health;
        proxy_set_header Host $host;
    }

    location /api/tamiyo/health {
        limit_req zone=health burst=5 nodelay;
        
        access_log off;
        proxy_pass http://tamiyo/health;
        proxy_set_header Host $host;
    }

    location /api/tolaria/health {
        limit_req zone=health burst=5 nodelay;
        
        access_log off;
        proxy_pass http://tolaria/health;
        proxy_set_header Host $host;
    }

    # MinIO console (for demo purposes)
    location /minio/ {
        proxy_pass http://minio:9001/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # WebSocket support
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }

    # Error pages
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    
    location = /50x.html {
        root /usr/share/nginx/html;
    }
}