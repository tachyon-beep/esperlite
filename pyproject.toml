[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "esper-morphogen"
version = "0.1.0"
requires-python = ">=3.12"
dependencies = [
    "torch>=2.2.0,<3.0",
    "torchvision>=0.17.0",
    "torch-geometric>=2.4.0,<3.0",
    "pydantic~=2.8",
    "fastapi~=0.112",
    "uvicorn[standard]~=0.30",
    "pyyaml~=6.0",
    "redis~=5.0",
    "psycopg2-binary~=2.9",
    "sqlalchemy~=2.0",
    "boto3~=1.34",
    "requests~=2.32",
    "numpy~=1.26",
    "networkx~=3.0",
]

[project.optional-dependencies]
dev = [
    "black~=24.8",
    "ruff~=0.5",
    "pytype~=2024.10.11",
    "pytest~=8.2",
    "pytest-cov~=5.0",
    "pytest-asyncio~=0.23",
    "pytest-xdist~=3.5",
    "pytest-benchmark~=4.0",
    "pytest-timeout~=2.3",
    "pytest-mock~=3.12",
    "httpx~=0.27",
    "coverage[toml]~=7.4",
    "bandit~=1.7",
    "safety~=3.2",
]
docs = [
    "sphinx>=7.0",
    "sphinx-autodoc-typehints>=1.25",
    "sphinx-rtd-theme>=2.0",
    "myst-parser>=2.0",
]
acceleration = [
    "torch-scatter>=2.1.0,<3.0",
    "torch-sparse>=0.6.17,<1.0",
    "torch-cluster>=1.6.1,<2.0",
]

[tool.black]
line-length = 88
target-version = ['py312']

[tool.ruff]
line-length = 88

[tool.ruff.lint]
select = ["E", "W", "F", "I", "C90", "N"]
ignore = ["E501"]

[tool.ruff.lint.isort]
force-single-line = true

[tool.pytype]
inputs = ["src/esper"]
python_version = "3.12"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = [
    "--strict-markers",
    "--strict-config", 
    "--cov=src/esper",
    "--cov-branch",
    "--cov-report=term-missing:skip-covered",
    "--cov-report=html:htmlcov",
    "--cov-report=xml:coverage.xml",
    "--cov-fail-under=85",
    "--tb=short",
    "--durations=10"
]
markers = [
    "unit: Unit tests (fast, isolated)",
    "integration: Integration tests (slower, with dependencies)", 
    "performance: Performance and benchmark tests",
    "slow: Tests that take significant time to run",
    "asyncio: Asynchronous tests requiring event loop",
    "gpu: Tests that require GPU acceleration",
    "memory_intensive: Tests that use significant memory",
    "network: Tests requiring network access",
    "docker: Tests requiring Docker containers",
    "stress: Stress tests that push system limits"
]
timeout = 300
asyncio_mode = "auto"
filterwarnings = [
    "ignore::UserWarning",
    "ignore::PendingDeprecationWarning",
    "ignore::torch.jit.TracerWarning",
]

[tool.coverage.run]
source = ["src/esper"]
branch = true
omit = [
    "*/tests/*", 
    "*/__main__.py",
    "*/conftest.py",
    "*/test_*.py"
]

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "def __str__", 
    "if __name__ == .__main__.:",
    "raise NotImplementedError",
    "raise AssertionError",
    "if TYPE_CHECKING:",
    "@abstractmethod",
    "\\.\\.\\."
]

[tool.coverage.html]
directory = "htmlcov"
title = "Esper Platform Test Coverage"

[tool.coverage.xml]
output = "coverage.xml"
